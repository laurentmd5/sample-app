# ==============================
# ðŸ”¨ STAGE 1 â€” Build
# ==============================
FROM golang:1.22-alpine AS builder

# Labels pour traÃ§abilitÃ©
LABEL maintainer="Laurent MAVOUNGOU <dev@yourdomain.com>"
LABEL description="Go Dev Dashboard - outil de monitoring et sÃ©curitÃ© pour dÃ©veloppeurs freelances"

WORKDIR /app

# Copie des fichiers sources et initialisation du module
COPY go.mod go.sum* . 2>/dev/null || true
RUN go mod init go-dev-dashboard || true
RUN go mod tidy

COPY . .

# Compilation statique (sÃ©curisÃ©e et portable)
RUN CGO_ENABLED=0 GOOS=linux go build -a -o /go-dev-dashboard .

# ==============================
# ðŸ§Š STAGE 2 â€” Final image
# ==============================
FROM gcr.io/distroless/base-debian11

WORKDIR /

# Copie du binaire depuis le builder
COPY --from=builder /go-dev-dashboard /go-dev-dashboard

# Port dâ€™Ã©coute de lâ€™application
ENV PORT=8090

# Utilisateur non-root pour sÃ©curitÃ©
USER nonroot:nonroot

# Exposition du port (facilite debug Docker)
EXPOSE 8090

# Commande de dÃ©marrage
ENTRYPOINT ["/go-dev-dashboard"]
